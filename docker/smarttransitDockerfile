#Ensure that the latest map is in a folder called tn.
#The dockerfile is based on the docker file of the OSRM project.
FROM continuumio/miniconda3  as builder
ARG DOCKER_TAG
ARG BUILD_CONCURRENCY
WORKDIR /
#COPY tn/tennessee-latest.osm.pbf /tn/tennessee-latest.osm.pbf
RUN apt-get update && apt-get -y --no-install-recommends install osmosis cmake make git gcc g++ libbz2-dev libxml2-dev wget ca-certificates unzip curl zip
WORKDIR /tn
RUN wget https://www.dropbox.com/s/yaqavwjqspdait7/tennessee-latest.osm.pbf
WORKDIR /src
RUN git clone https://github.com/smarttransit-ai/smarttransit-osrm-backend.git .
RUN git checkout b9e9ad3703167edc68d85f453913f022263bd4e1 -b temp
RUN NPROC=${BUILD_CONCURRENCY:-$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1)} && \
    apt-get -y --no-install-recommends install cmake make git gcc g++ libbz2-dev libxml2-dev \
    libzip-dev  curl pkg-config dos2unix libboost-all-dev lua5.2 liblua5.2-dev libtbb-dev -o APT::Install-Suggests=0 -o APT::Install-Recommends=0 && \
    echo "Building OSRM ${DOCKER_TAG}" && \
    git show --format="%H" | head -n1 > /opt/OSRM_GITSHA && \
    echo "Building OSRM gitsha $(cat /opt/OSRM_GITSHA)" && \
    mkdir -p build && \
    cd build && \
    BUILD_TYPE="Release" && \
    ENABLE_ASSERTIONS="Off" && \
    BUILD_TOOLS="Off" && \
    case ${DOCKER_TAG} in *"-debug"*) BUILD_TYPE="Debug";; esac && \
    case ${DOCKER_TAG} in *"-assertions"*) BUILD_TYPE="RelWithDebInfo" && ENABLE_ASSERTIONS="On" && BUILD_TOOLS="On";; esac && \
    echo "Building ${BUILD_TYPE} with ENABLE_ASSERTIONS=${ENABLE_ASSERTIONS} BUILD_TOOLS=${BUILD_TOOLS}" && \
    cmake .. -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DENABLE_ASSERTIONS=${ENABLE_ASSERTIONS} -DBUILD_TOOLS=${BUILD_TOOLS} -DENABLE_LTO=On && \
    make -j${NPROC} install && \
    cd ../profiles && \
    cp -r * /opt && \
    strip /usr/local/bin/* && \
    rm -rf /src /usr/local/lib/libosrm*
WORKDIR  /
RUN /usr/local/bin/osrm-extract -p /opt/car.lua /tn/tennessee-latest.osm.pbf
RUN /usr/local/bin/osrm-partition  /tn/tennessee-latest.osrm
RUN /usr/local/bin/osrm-customize  /tn/tennessee-latest.osrm


# Multistage build to reduce image size - https://docs.docker.com/engine/userguide/eng-image/multistage-build/#use-multi-stage-builds
# Only the content below ends up in the image, this helps remove /src from the image (which is large)

FROM continuumio/miniconda3 as runstage
ENV TZ=America/New_York
RUN apt-get update && apt-get install -y locales && rm -rf /var/lib/apt/lists/* \
    && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8
ENV LANG en_US.utf8
RUN mkdir -p /src  && mkdir -p /opt
RUN apt-get update && \
    apt-get install -y --no-install-recommends vim libboost-all-dev make  gcc g++  lua5.2 liblua5.2-dev libtbb-dev
WORKDIR /
COPY --from=builder /usr/local /usr/local
COPY --from=builder /opt /opt
COPY --from=builder /tn /tn
COPY requirementsconda.txt /requirements.txt
RUN set -ex && conda install  --file /requirements.txt
RUN /usr/local/bin/osrm-extract --help && \
    /usr/local/bin/osrm-routed --help && \
    /usr/local/bin/osrm-contract --help && \
   /usr/local/bin/osrm-partition --help && \
    /usr/local/bin/osrm-customize --help
WORKDIR /opt
#This is the default command that will run.
CMD ["/usr/local/bin/osrm-routed", "--algorithm", "mld", "/tn/tennessee-latest.osrm"]
EXPOSE 5000